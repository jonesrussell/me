name: Deploy to GitHub Pages

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
    types: [opened, synchronize]
  # Allow manual trigger
  workflow_dispatch:

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
      pull-requests: read
      actions: write
    env:
      DEBIAN_FRONTEND: noninteractive
      NODE_ENV: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache npm dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            node_modules
            .npm
            ~/.cache/ms-playwright
          key: deps-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            deps-${{ runner.os }}-

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: |
          npm ci --prefer-offline --no-audit
          npm rebuild @rollup/rollup-linux-x64-gnu

      - name: Type check
        run: npm run check

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm test

      - name: Install Playwright Browsers
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test

      - name: Upload Playwright report
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
          if-no-files-found: warn

  build:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache npm dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            node_modules
            .npm
          key: deps-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            deps-${{ runner.os }}-

      - name: Cache build output
        uses: actions/cache@v4
        id: build-cache
        with:
          path: |
            build
            .svelte-kit
          key: build-${{ runner.os }}-${{ github.sha }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            build-${{ runner.os }}-${{ github.sha }}-
            build-${{ runner.os }}-

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: |
          npm ci --prefer-offline --no-audit
          npm rebuild @rollup/rollup-linux-x64-gnu

      - name: Install Playwright dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npx playwright install-deps

      - name: Build
        env:
          BASE_PATH: '/${{ github.event.repository.name }}'
          NODE_ENV: production
        run: npm run build

      - name: Upload Pages artifact
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v3
        with:
          path: build/
          retention-days: 30

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
      contents: read
      pull-requests: read
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

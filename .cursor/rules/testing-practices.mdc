---
description:
globs:
alwaysApply: false
---
# Testing Practices

Testing is a critical part of our development process. Follow these guidelines for all test implementations:

- Prioritize testing functionality over CSS implementations
- Write unit tests for every component and test them in isolation
- Focus on user interactions, state management, and accessibility during testing
- Verify error handling and edge cases to ensure robustness
- Use Vitest and Testing Library for test execution
- Mock external dependencies to simulate realistic scenarios
- Use fixtures for consistent test data
- Follow the Arrange-Act-Assert (AAA) pattern
- Use snapshot testing for rendering consistency
- Test component rendering, props validation, and child element rendering
- Include asynchronous testing
- Avoid test IDs in favor of semantic HTML, roles, and labels

## Test File Structure
Tests should be located alongside the components they test with the `.test.ts` extension.

## Test Utilities
Common test utilities should be placed in `src/lib/test-utils` to maintain DRY principles.
